unit CNave;

interface
uses
  Types,  Vcl.Graphics,
  Vcl.Controls, CBala;

type
  Nave = class

    color: TColor;

    ancho : integer;
    alto  : integer;

    Cx    : integer;
    Cy    : integer;

    Balas : Array of Bala;
  private

  public
    constructor Create( x, y: integer );
    procedure setPosition( newCx, newCy: integer );
    procedure dibujarNave( pantalla: TCanvas );
    procedure dibujarBala( pantalla: TCanvas );
    function destruirBala( bala: Bala ): boolean;
    procedure addBala;

  end;

implementation

{ Nave }


constructor Nave.Create( x, y: integer );
begin
  Self.color := clWhite;
  Self.ancho := 50;
  Self.alto := 50;

  Cx := x;
  Cy := y;
end;

procedure Nave.addBala;
var
  b : Bala;
begin
  b := Bala.Create(clYellow,10,10);
  SetLength(Balas, Length(Balas) + 1);
  Balas[High(Balas)] := b;
end;

procedure Nave.dibujarBala( pantalla: TCanvas );
var
  b: Bala;
begin
 // Recorrer el array de balas usando un bucle for
  for b in Balas do
  begin

  end;
end;

function Nave.destruirBala(bala: Bala): boolean;
begin

  result := (bala.Cx < 0) or (bala.Cy < 0);
  
end;

procedure Nave.setPosition(newCx, newCy: integer);
begin
  Cx := newCx;
  Cy := newCy;
end;

procedure Nave.dibujarNave( pantalla: TCanvas );
begin

  pantalla.Brush.Color := color;
  // Dibuja La nave
  pantalla.Polygon([
    TPoint.Create( Cx - ancho div 2, Cy + alto div 2),
    TPoint.Create( Cx, Cy - alto div 2),
    TPoint.Create( Cx + ancho div 2, Cy + alto div 2 )
  ]);

end;

end.
